components:
  schemas:
    UserFlexFeatureRuleUpdateBody:
      properties:
        rule:
          $ref: "#/components/schemas/userFlexFeatureRule"
      type: object
    booleanFlag:
      description: A boolean typed flag value
      properties:
        value:
          description: Flag evaluation result
          type: boolean
      required:
      - value
    bulkEvaluationFailure:
      description: Bulk evaluation failure response
      properties:
        errorCode:
          description: "An appropriate  code specific to the bulk evaluation error. See https://openfeature.dev/specification/types#error-code"
          type: string
        errorDetails:
          description: Optional error details description for logging or other needs
          type: string
      required:
      - errorCode
    bulkEvaluationRequest:
      description: Evaluate multiple flags in one request
      properties:
        context:
          $ref: "#/components/schemas/context"
    bulkEvaluationSuccess:
      description: Success response for the bulk evaluation request
      properties:
        flags:
          items:
            oneOf:
            - $ref: "#/components/schemas/evaluationSuccess"
            - $ref: "#/components/schemas/evaluationFailure"
          type: array
      type: object
    configurationResponse:
      description: OFREP metadata response
      properties:
        capabilities:
          description: Capabilities of the flag management system and how to configure them in the provider.
          properties:
            cacheInvalidation:
              $ref: "#/components/schemas/featureCacheInvalidation"
          type: object
        name:
          description: name of the flag management system
          examples:
          - flagd
          - go-feature-flag
          type: string
    context:
      description: Context information for flag evaluation
      type: object
    errorDetails:
      description: An error description for logging or other needs
      type: string
    evaluationFailure:
      description: Flag evaluation failure response
      properties:
        errorCode:
          description: "OpenFeature compatible error code. See https://openfeature.dev/specification/types#error-code"
          enum:
          - PARSE_ERROR
          - TARGETING_KEY_MISSING
          - INVALID_CONTEXT
          - GENERAL
          type: string
        errorDetails:
          $ref: "#/components/schemas/errorDetails"
        key:
          $ref: "#/components/schemas/key"
      required:
      - key
      - errorCode
    evaluationRequest:
      description: Flag evaluation request
      properties:
        context:
          $ref: "#/components/schemas/context"
    evaluationSuccess:
      allOf:
      - properties:
          key:
            $ref: "#/components/schemas/key"
          metadata:
            additionalProperties:
              oneOf:
              - type: boolean
              - type: string
              - type: number
            description: Arbitrary metadata supporting flag evaluation
            type: object
          reason:
            description: An OpenFeature reason for the evaluation
            enum:
            - STATIC
            - TARGETING_MATCH
            - SPLIT
            - DISABLED
            - UNKNOWN
            type: string
          variant:
            description: Variant of the evaluated flag value
            type: string
      - oneOf:
        - $ref: "#/components/schemas/booleanFlag"
        - $ref: "#/components/schemas/stringFlag"
        - $ref: "#/components/schemas/integerFlag"
        - $ref: "#/components/schemas/floatFlag"
        - $ref: "#/components/schemas/objectFlag"
      description: Flag evaluation success response.
    featureCacheInvalidation:
      description: Configuration for the cache cacheInvalidation
      properties:
        polling:
          $ref: "#/components/schemas/featureCacheInvalidationPolling"
      type: object
    featureCacheInvalidationPolling:
      description: Configuration of the polling for the featureCacheInvalidation
      properties:
        enabled:
          description: set to true if the remote flag management system is supporting polling
          type: boolean
        minPollingInterval:
          description: minimum polling interval (in millisecond) supported by the flag management system. The provider should ensure not to set any polling value under this minimum.
          examples:
          - 60000
          type: number
      required:
      - name
      type: object
    flagNotFound:
      description: Flag not found response
      properties:
        errorCode:
          enum:
          - FLAG_NOT_FOUND
          type: string
        errorDetails:
          $ref: "#/components/schemas/errorDetails"
        key:
          $ref: "#/components/schemas/key"
      required:
      - key
      - errorCode
    floatFlag:
      description: A float typed flag value
      properties:
        value:
          description: Flag evaluation result
          examples:
          - 3.1415
          type: number
      required:
      - value
    generalErrorResponse:
      description: A general error response from the service
      properties:
        errorDetails:
          $ref: "#/components/schemas/errorDetails"
    integerFlag:
      description: An integer typed flag value
      properties:
        value:
          description: Flag evaluation result
          examples:
          - 3
          type: integer
      required:
      - value
    key:
      description: Feature flag key
      examples:
      - my-flag
      type: string
    objectFlag:
      description: An object typed flag value
      properties:
        value:
          description: Flag evaluation result
          type: object
      required:
      - value
    stringFlag:
      description: A string typed flag value
      properties:
        value:
          description: Flag evaluation result
          examples:
          - my-flag-value
          type: string
      required:
      - value
    userFlexFeaturePercentage:
      properties:
        value:
          additionalProperties:
            format: double
            type: number
          type: object
      type: object
    userFlexFeatureProgressiveRollout:
      properties:
        end:
          $ref: "#/components/schemas/userFlexFeatureProgressiveRolloutStep"
        initial:
          $ref: "#/components/schemas/userFlexFeatureProgressiveRolloutStep"
      type: object
    userFlexFeatureProgressiveRolloutStep:
      properties:
        dateValue:
          type: string
        percentageValue:
          format: double
          type: number
        variationValue:
          type: string
      type: object
    userFlexFeatureRule:
      properties:
        disableValue:
          type: boolean
        name:
          type: string
        percentageValue:
          $ref: "#/components/schemas/userFlexFeaturePercentage"
        progressiveRolloutValue:
          $ref: "#/components/schemas/userFlexFeatureProgressiveRollout"
        query:
          type: string
        variationResult:
          type: string
      type: object
    userFlexFeatureUpdateResponse:
      properties:
        result:
          type: boolean
      required:
      - result
      type: object
  securitySchemes:
    ApiKeyAuth:
      description: (optional) API Key to your flag management system.
      in: header
      name: X-API-Key
      type: apiKey
    BearerAuth:
      description: (optional) Bearer Authorization to your flag management system.
      scheme: bearer
      type: http
info:
  contact:
    url: https://github.com/open-feature/protocol
  description: OFREP define the protocol for remote flag evaluations
  license:
    identifier: Apache-2.0
    name: Apache 2.0
  title: OpenFeature Remote Evaluation Protocol (OFREP)
  version: 0.1.0
openapi: 3.1.0
paths:
  /ofrep/v1/configuration:
    get:
      description: OFREP configuration to provide information about the remote flag management system, to configure the OpenFeature SDK providers. This endpoint will be called during the initialization of the provider.
      parameters:
      - description: The request will be processed only if ETag doesn't match any of the values listed.
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/configurationResponse"
          description: OFREP metadata response
          headers:
            ETag:
              description: Entity tag used for cache validation
              schema:
                type: string
        "304":
          description: Flag Management System Metadata is not modified
        "401":
          description: Unauthorized - You need credentials to access the API
        "403":
          description: Forbidden - You are not authorized to access the API
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generalErrorResponse"
          description: Internal server error
      summary: OFREP provider configuration
  /ofrep/v1/evaluate/flags:
    post:
      description: OFREP bulk evaluation request
      parameters:
      - description: The request will be processed only if ETag doesn't match any of the values listed.
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulkEvaluationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkEvaluationSuccess"
          description: OFREP successful evaluation response
          headers:
            ETag:
              description: Entity tag used for cache validation
              schema:
                type: string
        "304":
          description: Bulk evaluation is not modified
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkEvaluationFailure"
          description: Bad evaluation request
        "401":
          description: Unauthorized - You need credentials to access the API
        "403":
          description: Forbidden - You are not authorized to access the API
        "429":
          description: Rate limit reached on the Flag Management System
          headers:
            Retry-Later:
              description: Indicates when to retry the request again
              schema:
                examples:
                - 2024-02-07T12:00:00Z
                format: date-time
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generalErrorResponse"
          description: Internal server error
  /ofrep/v1/evaluate/flags/{key}:
    post:
      description: OFREP single flag evaluation request
      parameters:
      - in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/evaluationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/evaluationSuccess"
          description: OFREP successful evaluation response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/evaluationFailure"
          description: Bad evaluation request
        "401":
          description: Unauthorized - You need credentials to access the API
        "403":
          description: Forbidden - You are not authorized to access the API
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/flagNotFound"
          description: Flag not found
        "429":
          description: Rate limit reached on the Flag Management System
          headers:
            Retry-Later:
              description: Indicates when to retry the request again
              schema:
                examples:
                - 2024-02-07T12:00:00Z
                format: date-time
                type: string
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/generalErrorResponse"
          description: Internal server error
  /user-flex-feature/api/v1/updates/{key}:
    post:
      operationId: UserFlexFeature_RuleUpdate
      parameters:
      - in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserFlexFeatureRuleUpdateBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userFlexFeatureUpdateResponse"
          description: A successful response.
      tags:
      - UserFlexFeature
security:
- ApiKeyAuth: []
- BearerAuth: []

